# TSIC Server Deployment Script
# Generated by Create-iDrive-Package.ps1

param(
    [string]$DriveOverride = "",
    [string]$ApiTargetOverride = "",
    [string]$AngularTargetOverride = ""
)

# Prompt for drive letter if not provided
if ([string]::IsNullOrEmpty($DriveOverride)) {
    $DriveLetter = Read-Host "What drive will you be publishing to [D, E]"
    $DriveLetter = $DriveLetter.ToUpper()
} else {
    $DriveLetter = $DriveOverride.ToUpper()
}

# Validate drive letter
if ($DriveLetter -notin @('D', 'E')) {
    Write-Error "Invalid drive letter. Please enter D or E."
    exit 1
}

# Set target paths
if ([string]::IsNullOrEmpty($ApiTargetOverride)) {
    $ApiTarget = "$DriveLetter" + ":\Websites\TSIC-API-CP"
} else {
    $ApiTarget = $ApiTargetOverride
}

if ([string]::IsNullOrEmpty($AngularTargetOverride)) {
    $AngularTarget = "$DriveLetter" + ":\Websites\TSIC-Angular-CP"
} else {
    $AngularTarget = $AngularTargetOverride
}

Write-Host "=== TSIC Server Deployment ===" -ForegroundColor Green
Write-Host "Deploying from iDrive restore..." -ForegroundColor Yellow
Write-Host ""

# Stop IIS sites before deployment
Write-Host "Stopping IIS websites..." -ForegroundColor Cyan
Import-Module WebAdministration -ErrorAction SilentlyContinue
if (Get-Module WebAdministration) {
    try {
        # Stop websites if they exist
        if (Get-Website -Name "TSIC-API-CP" -ErrorAction SilentlyContinue) {
            Stop-Website -Name "TSIC-API-CP"
            Write-Host "Stopped TSIC-API-CP website" -ForegroundColor White
        }
        if (Get-Website -Name "TSIC-Angular-CP" -ErrorAction SilentlyContinue) {
            Stop-Website -Name "TSIC-Angular-CP"
            Write-Host "Stopped TSIC-Angular-CP website" -ForegroundColor White
        }
    } catch {
        Write-Host "Could not stop websites - they might not exist yet" -ForegroundColor Yellow
    }
} else {
    Write-Host "WebAdministration module not available - manual IIS stop required" -ForegroundColor Yellow
}

# Create target directories
Write-Host "Creating IIS directories..." -ForegroundColor Cyan
if (!(Test-Path $ApiTarget)) {
    New-Item -ItemType Directory -Path $ApiTarget -Force | Out-Null
}
if (!(Test-Path $AngularTarget)) {
    New-Item -ItemType Directory -Path $AngularTarget -Force | Out-Null
}

# Deploy API
Write-Host "Deploying .NET API..." -ForegroundColor Cyan
Copy-Item ".\api\*" $ApiTarget -Recurse -Force

# Deploy Angular
Write-Host "Deploying Angular frontend..." -ForegroundColor Cyan
Copy-Item ".\angular\*" $AngularTarget -Recurse -Force

# Start IIS sites after deployment
Write-Host "Starting IIS websites..." -ForegroundColor Cyan
if (Get-Module WebAdministration) {
    try {
        # Start websites if they exist
        if (Get-Website -Name "TSIC-API-CP" -ErrorAction SilentlyContinue) {
            Start-Website -Name "TSIC-API-CP"
            Write-Host "Started TSIC-API-CP website" -ForegroundColor White
        }
        if (Get-Website -Name "TSIC-Angular-CP" -ErrorAction SilentlyContinue) {
            Start-Website -Name "TSIC-Angular-CP"
            Write-Host "Started TSIC-Angular-CP website" -ForegroundColor White
        }
    } catch {
        Write-Host "Could not start websites - they might not exist yet" -ForegroundColor Yellow
    }
} else {
    Write-Host "WebAdministration module not available - manual IIS start required" -ForegroundColor Yellow
}

Write-Host ""
Write-Host "Deployment completed successfully!" -ForegroundColor Green
Write-Host "API: http://10.0.0.45:5000" -ForegroundColor Green
Write-Host "Angular: http://10.0.0.45" -ForegroundColor Green
Write-Host ""

# Optional: Restart IIS sites
Write-Host "Restarting IIS application pools..." -ForegroundColor Cyan
Import-Module WebAdministration -ErrorAction SilentlyContinue
if (Get-Module WebAdministration) {
    try {
        Restart-WebAppPool -Name "TSIC-API-Pool" -ErrorAction SilentlyContinue
        Restart-WebAppPool -Name "TSIC-Angular-Pool" -ErrorAction SilentlyContinue
        Write-Host "IIS application pools restarted" -ForegroundColor Green
    } catch {
        Write-Host "Could not restart IIS pools - they might not exist yet" -ForegroundColor Yellow
    }
} else {
    Write-Host "WebAdministration module not available" -ForegroundColor Yellow
}

Write-Host ""
Write-Host "=== Next Steps ===" -ForegroundColor Magenta
Write-Host "1. Verify API is responding: http://10.0.0.45:5000" -ForegroundColor White
Write-Host "2. Verify Angular loads: http://10.0.0.45" -ForegroundColor White
Write-Host "3. Test API calls from Angular application" -ForegroundColor White
Write-Host "4. Configure CORS if needed" -ForegroundColor White